在文件中设置__all__变量，可以限定通过 from xxx import * 时的内容
__all__=["函数名"]指定输出哪些内容给别人使用，针对*所产生的一个变量

__name__用于if判断，将不想被别人使用的代码如打印程序、调用函数之类的代码放在if判断中
__name__ == main 表示在本页面中

游戏窗口坐标系是以左上角为原点
 
包的导入方式：
    使用import 文件.模块 的方式导入
    使用from 文件夹 import 模块 的方式导入
    在__init__.py文件中写入

模块的导入方式：
    import 包名.模块名
    import 包名.模块名 as 别名
    from 包名.模块名 import ...
    from 包名 import *
    from 父包名.子包名.模块 import …

每个.py文件都有一个__name__变量。
在主动执行文件中__name__的值为 _ _ _main_ _ _。
在被动执行文件中__name__的值为模块名。

每个.py文件都有一个__all__变量，__all__变量中包含的函数、全局变量或者类，才能以from ... import *的方式导入。

自定义异常类的格式：
    class 自定义异常类名(异常父类名):
        def __init__(self,形参1,形参2,...):
        ...
抛出自定义异常对象的格式:
    raise 自定义异常类名(形参1的值,形参2的值,...)

如果异常被处理了，就不会传递到外层，否则就会一层一层向外传递。
如果异常一直没有被处理，最后会由解释器来处理。